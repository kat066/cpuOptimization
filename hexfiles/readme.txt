Zinsser (zinsser2007@gmail.com)
04/06/2018

This readme is created at mips_cpu version 2.0
Before version 2.0, the following files exist:

coin.c
coin.dis
coin.hex
esift.dis
esift.hex
esift2.c
esift2.hex
nqueens.asm
nqueens.dis
nqueens.hex
qsort.dis
qsort.hex
queens.c
quickSort.c

Nobody knows how these files are compiled/generated, but we use these hex files
to preload the main memory with a preloader. These hex files have 32-bit words
on each line. The first line's byte address is 0x0, the second 0x4, and so on.

As of v2.0, the preloader is removed to save simulation time. We directly hack
these data into the sdram banks during simulations. (Thus, the project can not
be burned on to physical FPGA board without modification.) v2.0 targets at
DE1-SoC board (Cyclone V SoC) which features a IS42S16320D-7TL sdram chip.
Each word is 16-bit wide and there are 32M words (total 64MByte). Byte address
is 26-bit wide. It contains 4 banks. Each of them contains 8M words.

Verilog simulation model of sdram can be found at ip/sdr_sdram/ directory. See
ip/sdr_sdram/readme.txt for more information.

Sdram controller generated by Altera IP uses bank-interleaving address mode. Its
verilog simulation model can be found at
	sdram/simulation/submodules/sdram_sdram_controller.v
which is generated from sdram.qsys.

Based on the above information, hex2banks.py is created. It works with python2.
See its head documentation string for details. It converts all hex file into
.16bit.bank[01].hex files.
